################################################## 
# InterFax_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from InterFax_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class InterFaxLocator:
    InterFaxSoap_address = "https://ws.interfax.net/dfs.asmx"
    def getInterFaxSoapAddress(self):
        return InterFaxLocator.InterFaxSoap_address
    def getInterFaxSoap(self, url=None, **kw):
        return InterFaxSoapSOAP(url or InterFaxLocator.InterFaxSoap_address, **kw)

# Methods
class InterFaxSoapSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: GetListPP
    def GetListPP(self, request):
        if isinstance(request, GetListPPSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/GetListPP", **kw)
        # no output wsaction
        response = self.binding.Receive(GetListPPSoapOut.typecode)
        return response

    # op: GetPPCardDetails
    def GetPPCardDetails(self, request):
        if isinstance(request, GetPPCardDetailsSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/GetPPCardDetails", **kw)
        # no output wsaction
        response = self.binding.Receive(GetPPCardDetailsSoapOut.typecode)
        return response

    # op: GetPPCardTransactions
    def GetPPCardTransactions(self, request):
        if isinstance(request, GetPPCardTransactionsSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/GetPPCardTransactions", **kw)
        # no output wsaction
        response = self.binding.Receive(GetPPCardTransactionsSoapOut.typecode)
        return response

    # op: GetPPCardTransactionsAsByteArray
    def GetPPCardTransactionsAsByteArray(self, request):
        if isinstance(request, GetPPCardTransactionsAsByteArraySoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/GetPPCardTransactionsAsByteArray", **kw)
        # no output wsaction
        response = self.binding.Receive(GetPPCardTransactionsAsByteArraySoapOut.typecode)
        return response

    # op: FaxStatusEx
    def FaxStatusEx(self, request):
        if isinstance(request, FaxStatusExSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/FaxStatusEx", **kw)
        # no output wsaction
        response = self.binding.Receive(FaxStatusExSoapOut.typecode)
        return response

    # op: FaxQuery2
    def FaxQuery2(self, request):
        if isinstance(request, FaxQuery2SoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/FaxQuery2", **kw)
        # no output wsaction
        response = self.binding.Receive(FaxQuery2SoapOut.typecode)
        return response

    # op: FaxQuery
    def FaxQuery(self, request):
        if isinstance(request, FaxQuerySoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/FaxQuery", **kw)
        # no output wsaction
        response = self.binding.Receive(FaxQuerySoapOut.typecode)
        return response

    # op: FaxStatus
    def FaxStatus(self, request):
        if isinstance(request, FaxStatusSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/FaxStatus", **kw)
        # no output wsaction
        response = self.binding.Receive(FaxStatusSoapOut.typecode)
        return response

    # op: FaxStatusXML
    def FaxStatusXML(self, request):
        if isinstance(request, FaxStatusXMLSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/FaxStatusXML", **kw)
        # no output wsaction
        response = self.binding.Receive(FaxStatusXMLSoapOut.typecode)
        return response

    # op: SendCharFax
    def SendCharFax(self, request):
        if isinstance(request, SendCharFaxSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/SendCharFax", **kw)
        # no output wsaction
        response = self.binding.Receive(SendCharFaxSoapOut.typecode)
        return response

    # op: Sendfax
    def Sendfax(self, request):
        if isinstance(request, SendfaxSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/Sendfax", **kw)
        # no output wsaction
        response = self.binding.Receive(SendfaxSoapOut.typecode)
        return response

    # op: CancelFax
    def CancelFax(self, request):
        if isinstance(request, CancelFaxSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/CancelFax", **kw)
        # no output wsaction
        response = self.binding.Receive(CancelFaxSoapOut.typecode)
        return response

    # op: SendfaxEx
    def SendfaxEx(self, request):
        if isinstance(request, SendfaxExSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/SendfaxEx", **kw)
        # no output wsaction
        response = self.binding.Receive(SendfaxExSoapOut.typecode)
        return response

    # op: SendfaxEx_2
    def SendfaxEx_2(self, request):
        if isinstance(request, SendfaxEx_2SoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/SendfaxEx_2", **kw)
        # no output wsaction
        response = self.binding.Receive(SendfaxEx_2SoapOut.typecode)
        return response

    # op: ResendBroadcastFax
    def ResendBroadcastFax(self, request):
        if isinstance(request, ResendBroadcastFaxSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/ResendBroadcastFax", **kw)
        # no output wsaction
        response = self.binding.Receive(ResendBroadcastFaxSoapOut.typecode)
        return response

    # op: ReSendFax
    def ReSendFax(self, request):
        if isinstance(request, ReSendFaxSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/ReSendFax", **kw)
        # no output wsaction
        response = self.binding.Receive(ReSendFaxSoapOut.typecode)
        return response

    # op: GetFaxImage
    def GetFaxImage(self, request):
        if isinstance(request, GetFaxImageSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/GetFaxImage", **kw)
        # no output wsaction
        response = self.binding.Receive(GetFaxImageSoapOut.typecode)
        return response

    # op: HideFax
    def HideFax(self, request):
        if isinstance(request, HideFaxSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/HideFax", **kw)
        # no output wsaction
        response = self.binding.Receive(HideFaxSoapOut.typecode)
        return response

    # op: SendWordMailMerge
    def SendWordMailMerge(self, request):
        if isinstance(request, SendWordMailMergeSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/SendWordMailMerge", **kw)
        # no output wsaction
        response = self.binding.Receive(SendWordMailMergeSoapOut.typecode)
        return response

    # op: GetSupportedFileTypes
    def GetSupportedFileTypes(self, request):
        if isinstance(request, GetSupportedFileTypesSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/GetSupportedFileTypes", **kw)
        # no output wsaction
        response = self.binding.Receive(GetSupportedFileTypesSoapOut.typecode)
        return response

    # op: IsSupportedFileType
    def IsSupportedFileType(self, request):
        if isinstance(request, IsSupportedFileTypeSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/IsSupportedFileType", **kw)
        # no output wsaction
        response = self.binding.Receive(IsSupportedFileTypeSoapOut.typecode)
        return response

    # op: StartFileUpload
    def StartFileUpload(self, request):
        if isinstance(request, StartFileUploadSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/StartFileUpload", **kw)
        # no output wsaction
        response = self.binding.Receive(StartFileUploadSoapOut.typecode)
        return response

    # op: UploadFileChunk
    def UploadFileChunk(self, request):
        if isinstance(request, UploadFileChunkSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/UploadFileChunk", **kw)
        # no output wsaction
        response = self.binding.Receive(UploadFileChunkSoapOut.typecode)
        return response

    # op: CancelFileUpload
    def CancelFileUpload(self, request):
        if isinstance(request, CancelFileUploadSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.interfax.cc/CancelFileUpload", **kw)
        # no output wsaction
        response = self.binding.Receive(CancelFileUploadSoapOut.typecode)
        return response

GetListPPSoapIn = ns0.GetListPP_Dec().pyclass

GetListPPSoapOut = ns0.GetListPPResponse_Dec().pyclass

GetPPCardDetailsSoapIn = ns0.GetPPCardDetails_Dec().pyclass

GetPPCardDetailsSoapOut = ns0.GetPPCardDetailsResponse_Dec().pyclass

GetPPCardTransactionsSoapIn = ns0.GetPPCardTransactions_Dec().pyclass

GetPPCardTransactionsSoapOut = ns0.GetPPCardTransactionsResponse_Dec().pyclass

GetPPCardTransactionsAsByteArraySoapIn = ns0.GetPPCardTransactionsAsByteArray_Dec().pyclass

GetPPCardTransactionsAsByteArraySoapOut = ns0.GetPPCardTransactionsAsByteArrayResponse_Dec().pyclass

FaxStatusExSoapIn = ns0.FaxStatusEx_Dec().pyclass

FaxStatusExSoapOut = ns0.FaxStatusExResponse_Dec().pyclass

FaxQuery2SoapIn = ns0.FaxQuery2_Dec().pyclass

FaxQuery2SoapOut = ns0.FaxQuery2Response_Dec().pyclass

FaxQuerySoapIn = ns0.FaxQuery_Dec().pyclass

FaxQuerySoapOut = ns0.FaxQueryResponse_Dec().pyclass

FaxStatusSoapIn = ns0.FaxStatus_Dec().pyclass

FaxStatusSoapOut = ns0.FaxStatusResponse_Dec().pyclass

FaxStatusXMLSoapIn = ns0.FaxStatusXML_Dec().pyclass

FaxStatusXMLSoapOut = ns0.FaxStatusXMLResponse_Dec().pyclass

SendCharFaxSoapIn = ns0.SendCharFax_Dec().pyclass

SendCharFaxSoapOut = ns0.SendCharFaxResponse_Dec().pyclass

SendfaxSoapIn = ns0.Sendfax_Dec().pyclass

SendfaxSoapOut = ns0.SendfaxResponse_Dec().pyclass

CancelFaxSoapIn = ns0.CancelFax_Dec().pyclass

CancelFaxSoapOut = ns0.CancelFaxResponse_Dec().pyclass

SendfaxExSoapIn = ns0.SendfaxEx_Dec().pyclass

SendfaxExSoapOut = ns0.SendfaxExResponse_Dec().pyclass

SendfaxEx_2SoapIn = ns0.SendfaxEx_2_Dec().pyclass

SendfaxEx_2SoapOut = ns0.SendfaxEx_2Response_Dec().pyclass

ResendBroadcastFaxSoapIn = ns0.ResendBroadcastFax_Dec().pyclass

ResendBroadcastFaxSoapOut = ns0.ResendBroadcastFaxResponse_Dec().pyclass

ReSendFaxSoapIn = ns0.ReSendFax_Dec().pyclass

ReSendFaxSoapOut = ns0.ReSendFaxResponse_Dec().pyclass

GetFaxImageSoapIn = ns0.GetFaxImage_Dec().pyclass

GetFaxImageSoapOut = ns0.GetFaxImageResponse_Dec().pyclass

HideFaxSoapIn = ns0.HideFax_Dec().pyclass

HideFaxSoapOut = ns0.HideFaxResponse_Dec().pyclass

SendWordMailMergeSoapIn = ns0.SendWordMailMerge_Dec().pyclass

SendWordMailMergeSoapOut = ns0.SendWordMailMergeResponse_Dec().pyclass

GetSupportedFileTypesSoapIn = ns0.GetSupportedFileTypes_Dec().pyclass

GetSupportedFileTypesSoapOut = ns0.GetSupportedFileTypesResponse_Dec().pyclass

IsSupportedFileTypeSoapIn = ns0.IsSupportedFileType_Dec().pyclass

IsSupportedFileTypeSoapOut = ns0.IsSupportedFileTypeResponse_Dec().pyclass

StartFileUploadSoapIn = ns0.StartFileUpload_Dec().pyclass

StartFileUploadSoapOut = ns0.StartFileUploadResponse_Dec().pyclass

UploadFileChunkSoapIn = ns0.UploadFileChunk_Dec().pyclass

UploadFileChunkSoapOut = ns0.UploadFileChunkResponse_Dec().pyclass

CancelFileUploadSoapIn = ns0.CancelFileUpload_Dec().pyclass

CancelFileUploadSoapOut = ns0.CancelFileUploadResponse_Dec().pyclass
